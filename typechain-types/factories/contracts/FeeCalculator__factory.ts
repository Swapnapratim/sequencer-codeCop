/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FeeCalculator,
  FeeCalculatorInterface,
} from "../../contracts/FeeCalculator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "getClearinghouse",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subaccount",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "taker",
        type: "bool",
      },
    ],
    name: "getFeeFractionX18",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "getInterestFeeFractionX18",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "getLiquidationFeeFractionX18",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_clearinghouse",
        type: "address",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subaccount",
        type: "bytes32",
      },
      {
        internalType: "uint128",
        name: "quoteVolume",
        type: "uint128",
      },
    ],
    name: "recordVolume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        internalType: "int64",
        name: "makerRateX18",
        type: "int64",
      },
      {
        internalType: "int64",
        name: "takerRateX18",
        type: "int64",
      },
    ],
    name: "updateFeeRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610698806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b5cbd70e11610066578063b5cbd70e14610110578063b76d78e314610123578063ce5494bb14610136578063e88d794614610149578063f82ce57d1461015b57600080fd5b80630d8e6e2c1461009857806371bb043a146100ac5780638129fc1c146100dc578063b1cb0f42146100e6575b600080fd5b604051601a81526020015b60405180910390f35b6100c96100ba3660046104a3565b6706f05b59d3b2000092915050565b604051600f9190910b81526020016100a3565b6100e4610176565b005b6000546201000090046001600160a01b03166040516001600160a01b0390911681526020016100a3565b6100c961011e3660046104cf565b610284565b6100e461013136600461053d565b610324565b6100e4610144366004610591565b61040e565b6100e46101573660046105b3565b5050565b6100c96101693660046105f8565b506702c68af0bb14000090565b600054610100900460ff16158080156101965750600054600160ff909116105b806101b05750303b1580156101b0575060005460ff166001145b6102185760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561023b576000805461ff0019166101001790555b8015610281576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b606083811c600090815260016020908152604080832063ffffffff8716845282528083208151948501825254600781810b8652600160401b8204900b92850192909252600160801b90910460ff1690830181905290919082036103065750604080516060810182526000815265b5e620f4800060208201526001918101919091525b82610312578051610318565b80602001515b60070b95945050505050565b6000546040805180820190915260018152605560f81b6020820152906201000090046001600160a01b0316331461036e5760405162461bcd60e51b815260040161020f9190610613565b5060408051606081018252600793840b81529190920b602080830191825260018385018181526001600160a01b03909716600090815290825284812063ffffffff909616815294905291909220915182549151935160ff16600160801b0260ff60801b1967ffffffffffffffff958616600160401b026fffffffffffffffffffffffffffffffff1990941695909216949094179190911716919091179055565b6000546201000090046001600160a01b0316156104605760405162461bcd60e51b815260206004820152601060248201526f185b1c9958591e481b5a59dc985d195960821b604482015260640161020f565b600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b803563ffffffff8116811461049e57600080fd5b919050565b600080604083850312156104b657600080fd5b823591506104c66020840161048a565b90509250929050565b6000806000606084860312156104e457600080fd5b833592506104f46020850161048a565b91506040840135801515811461050957600080fd5b809150509250925092565b80356001600160a01b038116811461049e57600080fd5b8035600781900b811461049e57600080fd5b6000806000806080858703121561055357600080fd5b61055c85610514565b935061056a6020860161048a565b92506105786040860161052b565b91506105866060860161052b565b905092959194509250565b6000602082840312156105a357600080fd5b6105ac82610514565b9392505050565b600080604083850312156105c657600080fd5b8235915060208301356fffffffffffffffffffffffffffffffff811681146105ed57600080fd5b809150509250929050565b60006020828403121561060a57600080fd5b6105ac8261048a565b60006020808352835180602085015260005b8181101561064157858101830151858201604001528201610625565b506000604082860101526040601f19601f830116850101925050509291505056fea26469706673582212204ad80b1b4043e8a1922dd78b8dc2ecba3967c8ae01b46d81f164fdbb98031e7964736f6c63430008160033";

type FeeCalculatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeCalculatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeCalculator__factory extends ContractFactory {
  constructor(...args: FeeCalculatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FeeCalculator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeCalculator__factory {
    return super.connect(runner) as FeeCalculator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeCalculatorInterface {
    return new Interface(_abi) as FeeCalculatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FeeCalculator {
    return new Contract(address, _abi, runner) as unknown as FeeCalculator;
  }
}

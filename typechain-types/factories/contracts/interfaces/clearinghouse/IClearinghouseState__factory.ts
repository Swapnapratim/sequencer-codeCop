/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IClearinghouseState,
  IClearinghouseStateInterface,
} from "../../../../contracts/interfaces/clearinghouse/IClearinghouseState";

const _abi = [
  {
    inputs: [],
    name: "getMaxHealthGroup",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "getRisk",
    outputs: [
      {
        components: [
          {
            internalType: "int128",
            name: "longWeightInitialX18",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "shortWeightInitialX18",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "longWeightMaintenanceX18",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "shortWeightMaintenanceX18",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "largePositionPenaltyX18",
            type: "int128",
          },
        ],
        internalType: "struct RiskHelper.Risk",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IClearinghouseState__factory {
  static readonly abi = _abi;
  static createInterface(): IClearinghouseStateInterface {
    return new Interface(_abi) as IClearinghouseStateInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IClearinghouseState {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IClearinghouseState;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OffchainBook,
  OffchainBookInterface,
} from "../../contracts/OffchainBook";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "subaccount",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "priceX18",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "amount",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "expiration",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isTaker",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "feeAmount",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "baseDelta",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "quoteDelta",
        type: "int128",
      },
    ],
    name: "FillOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimSequencerFee",
    outputs: [
      {
        internalType: "int128",
        name: "feesAmount",
        type: "int128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "clearinghouse",
    outputs: [
      {
        internalType: "contract IClearinghouse",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dumpFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "engine",
    outputs: [
      {
        internalType: "contract IProductEngine",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fees",
    outputs: [
      {
        internalType: "contract IFeeCalculator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "filledAmounts",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32",
          },
          {
            internalType: "int128",
            name: "priceX18",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "amount",
            type: "int128",
          },
          {
            internalType: "uint64",
            name: "expiration",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
        ],
        internalType: "struct IEndpoint.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "getDigest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEndpoint",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarket",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "productId",
            type: "uint32",
          },
          {
            internalType: "int128",
            name: "sizeIncrement",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "priceIncrementX18",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "lpSpreadX18",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "collectedFees",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "sequencerFees",
            type: "int128",
          },
        ],
        internalType: "struct IOffchainBook.Market",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinSize",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "getOraclePriceX18",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "healthGroup",
        type: "uint32",
      },
    ],
    name: "getOraclePricesX18",
    outputs: [
      {
        components: [
          {
            internalType: "int128",
            name: "spotPriceX18",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "perpPriceX18",
            type: "int128",
          },
        ],
        internalType: "struct IEndpoint.Prices",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClearinghouse",
        name: "_clearinghouse",
        type: "address",
      },
      {
        internalType: "contract IProductEngine",
        name: "_engine",
        type: "address",
      },
      {
        internalType: "address",
        name: "_endpoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "contract IFeeCalculator",
        name: "_fees",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_productId",
        type: "uint32",
      },
      {
        internalType: "int128",
        name: "_sizeIncrement",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "_priceIncrementX18",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "_minSize",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "_lpSpreadX18",
        type: "int128",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        internalType: "int128",
        name: "sizeIncrement",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "priceIncrementX18",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "lpSpreadX18",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "collectedFees",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "sequencerFees",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "productId",
            type: "uint32",
          },
          {
            internalType: "int128",
            name: "baseDelta",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "quoteDelta",
            type: "int128",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "sender",
                    type: "bytes32",
                  },
                  {
                    internalType: "int128",
                    name: "priceX18",
                    type: "int128",
                  },
                  {
                    internalType: "int128",
                    name: "amount",
                    type: "int128",
                  },
                  {
                    internalType: "uint64",
                    name: "expiration",
                    type: "uint64",
                  },
                  {
                    internalType: "uint64",
                    name: "nonce",
                    type: "uint64",
                  },
                ],
                internalType: "struct IEndpoint.Order",
                name: "order",
                type: "tuple",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct IEndpoint.SignedOrder",
            name: "taker",
            type: "tuple",
          },
        ],
        internalType: "struct IEndpoint.MatchOrderAMM",
        name: "txn",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "takerLinkedSigner",
        type: "address",
      },
    ],
    name: "matchOrderAMM",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "productId",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "amm",
                type: "bool",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes32",
                        name: "sender",
                        type: "bytes32",
                      },
                      {
                        internalType: "int128",
                        name: "priceX18",
                        type: "int128",
                      },
                      {
                        internalType: "int128",
                        name: "amount",
                        type: "int128",
                      },
                      {
                        internalType: "uint64",
                        name: "expiration",
                        type: "uint64",
                      },
                      {
                        internalType: "uint64",
                        name: "nonce",
                        type: "uint64",
                      },
                    ],
                    internalType: "struct IEndpoint.Order",
                    name: "order",
                    type: "tuple",
                  },
                  {
                    internalType: "bytes",
                    name: "signature",
                    type: "bytes",
                  },
                ],
                internalType: "struct IEndpoint.SignedOrder",
                name: "taker",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes32",
                        name: "sender",
                        type: "bytes32",
                      },
                      {
                        internalType: "int128",
                        name: "priceX18",
                        type: "int128",
                      },
                      {
                        internalType: "int128",
                        name: "amount",
                        type: "int128",
                      },
                      {
                        internalType: "uint64",
                        name: "expiration",
                        type: "uint64",
                      },
                      {
                        internalType: "uint64",
                        name: "nonce",
                        type: "uint64",
                      },
                    ],
                    internalType: "struct IEndpoint.Order",
                    name: "order",
                    type: "tuple",
                  },
                  {
                    internalType: "bytes",
                    name: "signature",
                    type: "bytes",
                  },
                ],
                internalType: "struct IEndpoint.SignedOrder",
                name: "maker",
                type: "tuple",
              },
            ],
            internalType: "struct IEndpoint.MatchOrders",
            name: "matchOrders",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "takerLinkedSigner",
            type: "address",
          },
          {
            internalType: "address",
            name: "makerLinkedSigner",
            type: "address",
          },
        ],
        internalType: "struct IEndpoint.MatchOrdersWithSigner",
        name: "txn",
        type: "tuple",
      },
    ],
    name: "matchOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "_sizeIncrement",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "_priceIncrementX18",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "_minSize",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "_lpSpreadX18",
        type: "int128",
      },
    ],
    name: "modifyConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_endpoint",
        type: "address",
      },
    ],
    name: "setEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "productId",
            type: "uint32",
          },
          {
            internalType: "int128",
            name: "amount",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "priceX18",
            type: "int128",
          },
        ],
        internalType: "struct IEndpoint.SwapAMM",
        name: "txn",
        type: "tuple",
      },
    ],
    name: "swapAMM",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061329b806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806380f55605116100c3578063d07041e01161007c578063d07041e01461031b578063d3d660cb14610326578063dbbb41551461035b578063e874b4f31461036e578063f1be16791461038f578063f2fde38b1461048457600080fd5b806380f55605146102405780638da5cb5b146102c05780639af1d35a146102d1578063aed8e967146102e4578063c40f02bd146102f5578063c9d4623f1461030857600080fd5b80635a174b8e116101155780635a174b8e146101cc5780635d4f5f97146101df578063665dc77e1461020a578063707c8b581461021d578063715018a61461022557806378f0d3ce1461022d57600080fd5b80630d8e6e2c146101525780630f4b509d146101665780631bcb460a1461017b5780632f8f1fb01461019657806340f1a34d146101a9575b600080fd5b604051601a81526020015b60405180910390f35b6101796101743660046129d9565b610497565b005b610183610961565b604051600f9190910b815260200161015d565b6101836101a4366004612a0e565b6109f4565b6101836101b7366004612a29565b60a060205260009081526040902054600f0b81565b6101796101da366004612a66565b610a83565b609a546101f2906001600160a01b031681565b6040516001600160a01b03909116815260200161015d565b610179610218366004612b34565b610cc4565b61017961134d565b610179611570565b61017961023b366004612b6f565b611584565b609d54609e54609f546102809263ffffffff811692600160201b909104600f90810b9282820b92600160801b90819004830b9282810b9291909104900b86565b6040805163ffffffff9097168752600f95860b602088015293850b9386019390935290830b6060850152820b6080840152900b60a082015260c00161015d565b6033546001600160a01b03166101f2565b609c546101f2906001600160a01b031681565b6065546001600160a01b03166101f2565b610179610303366004612bc1565b61199f565b609b546101f2906001600160a01b031681565b60a154600f0b610183565b610339610334366004612a0e565b611a55565b604080518251600f90810b8252602093840151900b928101929092520161015d565b610179610369366004612c1d565b611ad8565b61038161037c366004612d50565b611b02565b60405190815260200161015d565b6104236040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c081018252609d5463ffffffff81168252600160201b9004600f90810b6020830152609e5480820b93830193909352600160801b92839004810b6060830152609f5480820b60808401529290920490910b60a082015290565b60405161015d9190600060c08201905063ffffffff83511682526020830151600f0b60208301526040830151600f0b60408301526060830151600f0b60608301526080830151600f0b608083015260a0830151600f0b60a083015292915050565b610179610492366004612c1d565b611baf565b6065546001600160a01b031633146104ca5760405162461bcd60e51b81526004016104c190612d6c565b60405180910390fd5b6040805160c081018252609d5463ffffffff81168252600160201b9004600f90810b602080840191909152609e5480830b84860152600160801b90819004830b6060850152609f5480840b60808601520490910b60a0830152609b548351634604d19b60e01b8152935192936001936001600160a01b0390921692634604d19b926004808401938290030181865afa15801561056a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058e9190612dcc565b600181111561059f5761059f612db6565b036106015760208101516105b96060840160408501612ded565b6105c39190612e20565b60408051808201909152600381526204953560ec1b602082015290600f0b156105ff5760405162461bcd60e51b81526004016104c19190612e50565b505b609b54815160009182916001600160a01b039091169063d952f2a39061062d6060880160408901612ded565b61063d6080890160608a01612ded565b602088015160608901516040516001600160e01b031960e088901b16815263ffffffff959095166004860152600f93840b602486015291830b6044850152820b6064840152900b608482015260a40160408051808303816000875af11580156106aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ce9190612e9f565b91509150816106dc90612ee4565b91506106e781612ee4565b905060006107258560000135858585600088600f0b136107155760a15461071090600f0b612ee4565b61071c565b60a154600f0b5b60006001611c28565b60408051600280825260608201909252919450919250600091816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816107435790505090506040518060800160405280866000015163ffffffff1681526020018760000135815260200185600f0b815260200184600f0b815250816000815181106107c1576107c1612f0a565b60200260200101819052506040518060800160405280600063ffffffff1681526020018760000135815260200184600f0b81526020016000600f0b8152508160018151811061081257610812612f0a565b6020908102919091010152609b54604051636c9a2ce360e01b81526001600160a01b0390911690636c9a2ce39061084d908490600401612f20565b600060405180830381600087803b15801561086757600080fd5b505af115801561087b573d6000803e3d6000fd5b5050609a546040516388b6496f60e01b8152600094506001600160a01b0390911692506388b6496f91506108b6908935908590600401612f91565b602060405180830381865afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190612fc3565b600f0b121560405180604001604052806002815260200161125560f21b815250906109355760405162461bcd60e51b81526004016104c19190612e50565b505050608082015160a0909201516001600160801b03908116600160801b02921691909117609f555050565b609a546000906001600160a01b031633146109d55760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520636c656172696e67686f7573652063616e20636c61696d60448201526d2073657175656e6365722066656560901b60648201526084016104c1565b50609f80546001600160801b038116909155600160801b9004600f0b90565b600063ffffffff8216610a1157610a0b6001611c4a565b92915050565b606554604051631b47234360e11b815263ffffffff841660048201526001600160a01b039091169063368e468690602401602060405180830381865afa158015610a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0b9190612fc3565b600054610100900460ff1615808015610aa35750600054600160ff909116105b80610abd5750303b158015610abd575060005460ff166001145b610b205760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104c1565b6000805460ff191660011790558015610b43576000805461ff0019166101001790555b610b4b611cba565b610b5489611ad8565b610b5d88611baf565b610ba2604051806040016040528060068152602001650accae4e8caf60d31b81525060405180604001604052806005815260200164302e302e3160d81b815250611ce9565b609a80546001600160a01b03808e166001600160a01b031992831617909255609b80548d8416908316179055609c8054928a16928216929092179091556040805160c08101825263ffffffff8916808252600f89810b602084015288810b938301939093529185900b606082015260006080820181905260a0909101819052609d80546001600160801b03808b16600160201b029190951690931792909217909155818416600160801b0282871617609e55609f5560a180549185166001600160801b0319929092169190911790558015610cb7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b6065546001600160a01b03163314610cee5760405162461bcd60e51b81526004016104c190612d6c565b6040805160c081018252609d5463ffffffff81168252600160201b9004600f90810b6020830152609e5480820b93830193909352600160801b92839004810b6060830152609f5480820b60808401529290920490910b60a08201526000610d558380612fe0565b610d63906040810190613000565b610d6c90613016565b90506000610d7a8480612fe0565b610d88906060810190613000565b610d9190613016565b905060006040518060600160405280610dad8560000151611b02565b8152602001610dbf8460000151611b02565b81528351604090810151600f0b6020928301528551810151835193945092610df9928892889291610df4918c01908c01612c1d565b611d1e565b60405180604001604052806002815260200161125560f21b81525090610e325760405162461bcd60e51b81526004016104c19190612e50565b50610e5085848460200151896040016020810190610df49190612c1d565b60405180604001604052806002815260200161494d60f01b81525090610e895760405162461bcd60e51b81526004016104c19190612e50565b5083516040908101518451820151825180840190935260048352634f43424d60e01b60208401526000600f91820b81129290910b1303610edc5760405162461bcd60e51b81526004016104c19190612e50565b506000836000015160400151600f0b1315610f4c57836000015160200151600f0b836000015160200151600f0b1215604051806040016040528060048152602001634f43424d60e01b81525090610f465760405162461bcd60e51b81526004016104c19190612e50565b50610fa3565b836000015160200151600f0b836000015160200151600f0b1315604051806040016040528060048152602001634f43424d60e01b81525090610fa15760405162461bcd60e51b81526004016104c19190612e50565b505b600080610fba878760000151876000015187611e69565b915091506000610ffb876000015160000151898585878c60000151604001518a610fe491906130c3565b610fee91906130c3565b8b51602001516001611c28565b60408051600280825260608201909252919450919250600091816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161101957905050905060405180608001604052808a6000015163ffffffff168152602001896000015160000151815260200185600f0b815260200184600f0b8152508160008151811061109b5761109b612f0a565b60200260200101819052506040518060800160405280600063ffffffff168152602001896000015160000151815260200184600f0b81526020016000600f0b815250816001815181106110f0576110f0612f0a565b6020908102919091010152609b54604051636c9a2ce360e01b81526001600160a01b0390911690636c9a2ce39061112b908490600401612f20565b600060405180830381600087803b15801561114557600080fd5b505af1158015611159573d6000803e3d6000fd5b505089515161116c935091506121329050565b60405180604001604052806002815260200161125560f21b815250906111a55760405162461bcd60e51b81526004016104c19190612e50565b50604080518082019091526002815261494d60f01b6020820152506111ca8980612fe0565b6111d8906040810190613000565b85519035907f224253ad5cda2459ff587f559a41374ab9243acbd2daff8c13f05473db79d14c6112088c80612fe0565b611216906040810190613000565b611227906040810190602001612ded565b876112328e80612fe0565b611240906040810190613000565b6112519060808101906060016130f0565b61125b8f80612fe0565b611269906040810190613000565b61127a9060a08101906080016130f0565b6001888b8b60405161129398979695949392919061310b565b60405180910390a3608088015160a08901516001600160801b03908116600160801b02911617609f558651604001516112cc90856130c3565b8551600090815260a060205260409081902080546001600160801b0319166001600160801b03939093169290921790915586518101519086015161131091906130c3565b602095860151600090815260a0909652604090952080546001600160801b0319166001600160801b03909616959095179094555050505050505050565b6065546001600160a01b031633146113775760405162461bcd60e51b81526004016104c190612d6c565b604080516001808252818301909252600091816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161138e57905050609f80546001600160801b03198116909155909150600f0b6000609b60009054906101000a90046001600160a01b03166001600160a01b0316634604d19b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561142f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114539190612dcc565b600181111561146457611464612db6565b036114be576040518060800160405280600063ffffffff1681526020016000801b815260200182600f0b81526020016000600f0b815250826000815181106114ae576114ae612f0a565b602002602001018190525061150a565b60408051608081018252609d5463ffffffff168152600060208201819052918101829052600f83900b60608201528351909184916114fe576114fe612f0a565b60200260200101819052505b609b54604051636c9a2ce360e01b81526001600160a01b0390911690636c9a2ce39061153a908590600401612f20565b600060405180830381600087803b15801561155457600080fd5b505af1158015611568573d6000803e3d6000fd5b505050505050565b611578612138565b6115826000612192565b565b6065546001600160a01b031633146115ae5760405162461bcd60e51b81526004016104c190612d6c565b6040805160c081018252609d5463ffffffff81168252600160201b9004600f90810b6020830152609e5480820b93830193909352600160801b92839004810b606080840191909152609f5480830b608085015293909304900b60a0820152906000906116309061162090860186613000565b61037c9036819003810190612d50565b905060006116416060860186613000565b611652906060810190604001612ded565b905060006116636060870187613000565b61166c90613016565b905061167a84828588611d1e565b60405180604001604052806002815260200161125560f21b815250906116b35760405162461bcd60e51b81526004016104c19190612e50565b506000806116e1866116cb60408b0160208c01612ded565b6116db60608c0160408d01612ded565b866121e4565b915091506000611733846000015160000151888585878960000151604001518b61170b91906130c3565b61171591906130c3565b611723600f89900b8a612452565b61172c90612ee4565b6001611c28565b60408051600280825260608201909252919450919250600091816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816117515790505090506040518060800160405280896000015163ffffffff168152602001866000015160000151815260200185600f0b815260200184600f0b815250816000815181106117d3576117d3612f0a565b60200260200101819052506040518060800160405280600063ffffffff168152602001866000015160000151815260200184600f0b81526020016000600f0b8152508160018151811061182857611828612f0a565b6020908102919091010152609b54604051636c9a2ce360e01b81526001600160a01b0390911690636c9a2ce390611863908490600401612f20565b600060405180830381600087803b15801561187d57600080fd5b505af1158015611891573d6000803e3d6000fd5b506001925061189e915050565b60405180604001604052806002815260200161125560f21b815250906118d75760405162461bcd60e51b81526004016104c19190612e50565b50845180516020820151606083015160809093015160405192938b937f224253ad5cda2459ff587f559a41374ab9243acbd2daff8c13f05473db79d14c9361192e9390928d929091906001908b908e908e9061310b565b60405180910390a3608088015160a08901516001600160801b03908116600160801b02911617609f5584516040015161196790876130c3565b600097885260a0602052604090972080546001600160801b0319166001600160801b0390981697909717909655505050505050505050565b609b546001600160a01b031633146119f95760405162461bcd60e51b815260206004820152601d60248201527f6f6e6c7920656e67696e652063616e206d6f6469667920636f6e66696700000060448201526064016104c1565b609d805473ffffffffffffffffffffffffffffffff000000001916600160201b6001600160801b0396871602179055918316600160801b9284169290920291909117609e5560a180546001600160801b03191691909216179055565b6040805180820182526000808252602082015260655491516357d2aef760e11b815263ffffffff8416600482015290916001600160a01b03169063afa55dee906024016040805180830381865afa158015611ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0b919061315a565b611ae0612138565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b600080604051806080016040528060528152602001613214605291399050611ba8818051906020012084600001518560200151866040015187606001518860800151604051602001611b8d969594939291909586526020860194909452600f92830b6040860152910b606084015267ffffffffffffffff90811660808401521660a082015260c00190565b6040516020818303038152906040528051906020012061251e565b9392505050565b611bb7612138565b6001600160a01b038116611c1c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104c1565b611c2581612192565b50565b600080611c3a8989898989898961256c565b9150915097509795505050505050565b6000600f82900b670de0b6b3a76400000260016001607f1b03198112801590611c7a575060016001607f1b038113155b6040518060400160405280600281526020016127a360f11b81525090611cb35760405162461bcd60e51b81526004016104c19190612e50565b5092915050565b600054610100900460ff16611ce15760405162461bcd60e51b81526004016104c19061319b565b611582612743565b600054610100900460ff16611d105760405162461bcd60e51b81526004016104c19061319b565b611d1a8282612773565b5050565b8251606081015160009190603d1c600190811603611e4257609b548651825160405163e039bfa960e01b815263ffffffff909216600483015260248201526000916001600160a01b03169063e039bfa990604401602060405180830381865afa158015611d8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db39190612fc3565b9050600081600f0b13151560008360400151600f0b13151503611ddc5760006040830152611e40565b60008260400151600f0b1315611e1057611e03826040015182611dfe90612ee4565b6127b4565b600f0b6040830152611e40565b60008260400151600f0b1215611e4057611e37826040015182611e3290612ee4565b6127d0565b600f0b60408301525b505b60008160200151600f0b138015611e5f57506040810151600f0b15155b9695505050505050565b60008060008560400151600f0b1215611e9957611e9285604001518560400151611e3290612ee4565b9150611eca565b60008560400151600f0b1315611ebf57611e9285604001518560400151611dfe90612ee4565b506000905080612129565b6020860151611ed99083612e20565b611ee390836130c3565b91506000611f01856020015184600f0b6127e590919063ffffffff16565b9050611f0c81612ee4565b91506000611f2e86600001518986611f2390612ee4565b856000806000611c28565b80935081925050508387604001818151611f4891906130c3565b600f0b905250604086018051859190611f629083906131e6565b600f0b90525060408051600280825260608201909252600091816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181611f80575050604080516080810182528b5163ffffffff168152895160208201529192508101611fdc87612ee4565b600f0b815260200184600f0b81525081600081518110611ffe57611ffe612f0a565b60200260200101819052506040518060800160405280600063ffffffff1681526020018860000151815260200184600f0b81526020016000600f0b8152508160018151811061204f5761204f612f0a565b6020908102919091010152609b54604051636c9a2ce360e01b81526001600160a01b0390911690636c9a2ce39061208a908490600401612f20565b600060405180830381600087803b1580156120a457600080fd5b505af11580156120b8573d6000803e3d6000fd5b50505050866000015186602001517f224253ad5cda2459ff587f559a41374ab9243acbd2daff8c13f05473db79d14c896020015189604001518b606001518c608001516000898d61210890612ee4565b8c60405161211d98979695949392919061310b565b60405180910390a35050505b94509492505050565b50600190565b6033546001600160a01b031633146115825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104c1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080806122016121f9600f87900b88612452565b600f0b612800565b90506000846000015160400151600f0b13156122cf57836000015160200151600f0b81600f0b1315604051806040016040528060048152602001634f43424d60e01b815250906122645760405162461bcd60e51b81526004016104c19190612e50565b50600086600f0b12801561228e575061227c86612ee4565b600f0b846000015160400151600f0b12155b604051806040016040528060048152602001634f43424d60e01b815250906122c95760405162461bcd60e51b81526004016104c19190612e50565b50612383565b836000015160200151600f0b81600f0b1215604051806040016040528060048152602001634f43424d60e01b8152509061231c5760405162461bcd60e51b81526004016104c19190612e50565b50600086600f0b138015612346575061233486612ee4565b600f0b846000015160400151600f0b13155b604051806040016040528060048152602001634f43424d60e01b815250906123815760405162461bcd60e51b81526004016104c19190612e50565b505b609b54875160405163c7167cf560e01b815263ffffffff9091166004820152600f88810b602483015287900b604482015260009182916001600160a01b039091169063c7167cf59060640160408051808303816000875af11580156123ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124109190612e9f565b9150915081866000015160400181815161242a91906131e6565b600f0b90525061243982612ee4565b61244282612ee4565b9450945050505094509492505050565b600081600f0b600014156040518060400160405280600381526020016222212d60e91b815250906124965760405162461bcd60e51b81526004016104c19190612e50565b50600082600f0b670de0b6b3a7640000600f0b85600f0b02816124bb576124bb612e0a565b05905060016001607f1b031981128015906124dd575060016001607f1b038113155b6040518060400160405280600281526020016127a360f11b815250906125165760405162461bcd60e51b81526004016104c19190612e50565b509392505050565b6000610a0b61252b612861565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600083156126295760a154600f90810b9087900b6000036125bc57612598600f82900b876127e5565b6125a290836131e6565b9150600088600f0b12156125bc576125b982612ee4565b91505b60006125ca8a600f0b612800565b90506000826125e16125dc8d8c6131e6565b6128e1565b6125eb91906130c3565b90506125f781836127b4565b9050600081600f0b131561262157612614600f8b900b82846128fc565b61261e90856131e6565b93505b505050612636565b61263387826131e6565b90505b609c548951604051635ae5eb8760e11b8152600481018d905263ffffffff909116602482015285151560448201526000916001600160a01b03169063b5cbd70e90606401602060405180830381865afa158015612697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126bb9190612fc3565b6126cd90670de0b6b3a76400006130c3565b905060008083600f0b136126ee576126e9600f84900b83612452565b6126fc565b6126fc600f84900b836127e5565b9050600061270a82856130c3565b9050808c60800181815161271e91906131e6565b600f0b9052508061272f818c6130c3565b955095505050505097509795505050505050565b600054610100900460ff1661276a5760405162461bcd60e51b81526004016104c19061319b565b61158233612192565b600054610100900460ff1661279a5760405162461bcd60e51b81526004016104c19061319b565b815160209283012081519190920120606691909155606755565b600081600f0b83600f0b126127c95781611ba8565b5090919050565b600081600f0b83600f0b136127c95781611ba8565b600080670de0b6b3a7640000600f85810b9085900b026124bb565b60408051808201909152600281526127a360f11b6020820152600090600f83900b60016001607f1b0319036128485760405162461bcd60e51b81526004016104c19190612e50565b50600082600f0b1261285a5781610a0b565b5060000390565b60006128dc7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61289060665490565b6067546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b905090565b60008082600f0b126128f35781610a0b565b610a0b82612ee4565b600081600f0b600014156040518060400160405280600381526020016222212d60e91b815250906129405760405162461bcd60e51b81526004016104c19190612e50565b50600082600f0b84600f0b86600f0b028161295d5761295d612e0a565b05905060016001607f1b0319811280159061297f575060016001607f1b038113155b6040518060400160405280600281526020016127a360f11b815250906129b85760405162461bcd60e51b81526004016104c19190612e50565b50949350505050565b6000608082840312156129d357600080fd5b50919050565b6000608082840312156129eb57600080fd5b611ba883836129c1565b803563ffffffff81168114612a0957600080fd5b919050565b600060208284031215612a2057600080fd5b611ba8826129f5565b600060208284031215612a3b57600080fd5b5035919050565b6001600160a01b0381168114611c2557600080fd5b80600f0b8114611c2557600080fd5b6000806000806000806000806000806101408b8d031215612a8657600080fd5b8a35612a9181612a42565b995060208b0135612aa181612a42565b985060408b0135612ab181612a42565b975060608b0135612ac181612a42565b965060808b0135612ad181612a42565b9550612adf60a08c016129f5565b945060c08b0135612aef81612a57565b935060e08b0135612aff81612a57565b92506101008b0135612b1081612a57565b91506101208b0135612b2181612a57565b809150509295989b9194979a5092959850565b600060208284031215612b4657600080fd5b813567ffffffffffffffff811115612b5d57600080fd5b820160608185031215611ba857600080fd5b60008060408385031215612b8257600080fd5b823567ffffffffffffffff811115612b9957600080fd5b612ba5858286016129c1565b9250506020830135612bb681612a42565b809150509250929050565b60008060008060808587031215612bd757600080fd5b8435612be281612a57565b93506020850135612bf281612a57565b92506040850135612c0281612a57565b91506060850135612c1281612a57565b939692955090935050565b600060208284031215612c2f57600080fd5b8135611ba881612a42565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612c7357612c73612c3a565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612ca257612ca2612c3a565b604052919050565b803567ffffffffffffffff81168114612a0957600080fd5b600060a08284031215612cd457600080fd5b60405160a0810181811067ffffffffffffffff82111715612cf757612cf7612c3a565b604052823581529050806020830135612d0f81612a57565b60208201526040830135612d2281612a57565b6040820152612d3360608401612caa565b6060820152612d4460808401612caa565b60808201525092915050565b600060a08284031215612d6257600080fd5b611ba88383612cc2565b6020808252602a908201527f53657175656e63657247617465643a2063616c6c6572206973206e6f742074686040820152691948195b991c1bda5b9d60b21b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b600060208284031215612dde57600080fd5b815160028110611ba857600080fd5b600060208284031215612dff57600080fd5b8135611ba881612a57565b634e487b7160e01b600052601260045260246000fd5b600082600f0b80612e4157634e487b7160e01b600052601260045260246000fd5b8083600f0b0791505092915050565b60006020808352835180602085015260005b81811015612e7e57858101830151858201604001528201612e62565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215612eb257600080fd5b8251612ebd81612a57565b6020840151909250612bb681612a57565b634e487b7160e01b600052601160045260246000fd5b600081600f0b60016001607f1b03198103612f0157612f01612ece565b60000392915050565b634e487b7160e01b600052603260045260246000fd5b602080825282518282018190526000919060409081850190868401855b82811015612f84578151805163ffffffff168552868101518786015285810151600f90810b87870152606091820151900b9085015260809093019290850190600101612f3d565b5091979650505050505050565b8281526040810160038310612fb657634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600060208284031215612fd557600080fd5b8151611ba881612a57565b60008235607e19833603018112612ff657600080fd5b9190910192915050565b6000823560be19833603018112612ff657600080fd5b600060c0823603121561302857600080fd5b613030612c50565b61303a3684612cc2565b815260a083013567ffffffffffffffff8082111561305757600080fd5b9084019036601f83011261306a57600080fd5b813560208282111561307e5761307e612c3a565b613090601f8301601f19168201612c79565b925081835236818386010111156130a657600080fd5b818185018285013760009183018101919091528301525092915050565b600f82810b9082900b0360016001607f1b0319811260016001607f1b0382131715610a0b57610a0b612ece565b60006020828403121561310257600080fd5b611ba882612caa565b600f98890b815296880b602088015267ffffffffffffffff95861660408801529390941660608601529015156080850152840b60a084015290830b60c083015290910b60e08201526101000190565b60006040828403121561316c57600080fd5b613174612c50565b825161317f81612a57565b8152602083015161318f81612a57565b60208201529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600f81810b9083900b0160016001607f1b03811360016001607f1b031982121715610a0b57610a0b612ece56fe4f7264657228627974657333322073656e6465722c696e743132382070726963655831382c696e7431323820616d6f756e742c75696e7436342065787069726174696f6e2c75696e743634206e6f6e636529a264697066735822122013871d2557ce2b080658a998c4b202d94166b6f3c8ddd23b3304b8506cfe678b64736f6c63430008160033";

type OffchainBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OffchainBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OffchainBook__factory extends ContractFactory {
  constructor(...args: OffchainBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OffchainBook & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OffchainBook__factory {
    return super.connect(runner) as OffchainBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OffchainBookInterface {
    return new Interface(_abi) as OffchainBookInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OffchainBook {
    return new Contract(address, _abi, runner) as unknown as OffchainBook;
  }
}

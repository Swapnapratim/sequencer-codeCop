/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LarryMeme,
  LarryMemeInterface,
} from "../../../contracts/Larry.sol/LarryMeme";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
    ],
    name: "airdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "airdrop_supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "total_supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052620000126012600a6200033a565b6200002290636e263e0062000352565b6006553480156200003257600080fd5b506040518060400160405280600a8152602001692620a9292c9021a7a4a760b11b815250604051806040016040528060058152602001644c4152525960d81b815250816003908162000085919062000412565b50600462000094828262000412565b505050620000b1620000ab6200010460201b60201c565b62000108565b620000f933600654620000c9620000ff60201b60201c565b620000d690600a6200033a565b620000e790640a3e9ab80062000352565b620000f39190620004de565b6200015a565b6200050a565b601290565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001b55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001c99190620004f4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200027c57816000190482111562000260576200026062000225565b808516156200026e57918102915b93841c939080029062000240565b509250929050565b600082620002955750600162000334565b81620002a45750600062000334565b8160018114620002bd5760028114620002c857620002e8565b600191505062000334565b60ff841115620002dc57620002dc62000225565b50506001821b62000334565b5060208310610133831016604e8410600b84101617156200030d575081810a62000334565b6200031983836200023b565b806000190482111562000330576200033062000225565b0290505b92915050565b60006200034b60ff84168362000284565b9392505050565b808202811582820484141762000334576200033462000225565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200039757607f821691505b602082108103620003b857634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000220576000816000526020600020601f850160051c81016020861015620003e95750805b601f850160051c820191505b818110156200040a57828155600101620003f5565b505050505050565b81516001600160401b038111156200042e576200042e6200036c565b62000446816200043f845462000382565b84620003be565b602080601f8311600181146200047e5760008415620004655750858301515b600019600386901b1c1916600185901b1785556200040a565b600085815260208120601f198616915b82811015620004af578886015182559484019460019091019084016200048e565b5085821015620004ce5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111562000334576200033462000225565b8082018082111562000334576200033462000225565b610d81806200051a6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d71461020d578063a9059cbb14610220578063d52de59914610233578063dd62ed3e1461023c578063f2fde38b1461024f57600080fd5b806370a08231146101b9578063715018a6146101e25780638da5cb5b146101ea57806395d89b411461020557600080fd5b8063313ce567116100de578063313ce567146101765780633940e9ee14610185578063395093511461019157806367243482146101a457600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610262565b6040516101259190610ae1565b60405180910390f35b61014161013c366004610b4c565b6102f4565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610b76565b61030e565b60405160128152602001610125565b610155640a3e9ab80081565b61014161019f366004610b4c565b610332565b6101b76101b2366004610bfe565b610354565b005b6101556101c7366004610c6a565b6001600160a01b031660009081526020819052604090205490565b6101b76104e4565b6005546040516001600160a01b039091168152602001610125565b6101186104f8565b61014161021b366004610b4c565b610507565b61014161022e366004610b4c565b610582565b61015560065481565b61015561024a366004610c8c565b610590565b6101b761025d366004610c6a565b6105bb565b60606003805461027190610cbf565b80601f016020809104026020016040519081016040528092919081815260200182805461029d90610cbf565b80156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b5050505050905090565b600033610302818585610634565b60019150505b92915050565b60003361031c858285610758565b6103278585856107d2565b506001949350505050565b6000336103028185856103458383610590565b61034f9190610d0f565b610634565b61035c610976565b6000818481146103b35760405162461bcd60e51b815260206004820152601a60248201527f4c52203a206e6f7420657175616c206c697374206c656e67746800000000000060448201526064015b60405180910390fd5b80156103fb5783836103c6600184610d22565b8181106103d5576103d5610d35565b90506020020135826103e79190610d0f565b91506103f4600182610d22565b90506103b3565b81600654101561044d5760405162461bcd60e51b815260206004820152601b60248201527f4c52203a2065786365656465642061697264726f70206c696d6974000000000060448201526064016103aa565b816006600082825461045f9190610d22565b909155508590505b80156104db576104c9878761047d600185610d22565b81811061048c5761048c610d35565b90506020020160208101906104a19190610c6a565b86866104ae600186610d22565b8181106104bd576104bd610d35565b905060200201356109d0565b6104d4600182610d22565b9050610467565b50505050505050565b6104ec610976565b6104f66000610a8f565b565b60606004805461027190610cbf565b600033816105158286610590565b9050838110156105755760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103aa565b6103278286868403610634565b6000336103028185856107d2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105c3610976565b6001600160a01b0381166106285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103aa565b61063181610a8f565b50565b6001600160a01b0383166106965760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103aa565b6001600160a01b0382166106f75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103aa565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006107648484610590565b905060001981146107cc57818110156107bf5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103aa565b6107cc8484848403610634565b50505050565b6001600160a01b0383166108365760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103aa565b6001600160a01b0382166108985760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103aa565b6001600160a01b038316600090815260208190526040902054818110156109105760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103aa565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107cc565b6005546001600160a01b031633146104f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b6001600160a01b038216610a265760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103aa565b8060026000828254610a389190610d0f565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020808352835180602085015260005b81811015610b0f57858101830151858201604001528201610af3565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b4757600080fd5b919050565b60008060408385031215610b5f57600080fd5b610b6883610b30565b946020939093013593505050565b600080600060608486031215610b8b57600080fd5b610b9484610b30565b9250610ba260208501610b30565b9150604084013590509250925092565b60008083601f840112610bc457600080fd5b50813567ffffffffffffffff811115610bdc57600080fd5b6020830191508360208260051b8501011115610bf757600080fd5b9250929050565b60008060008060408587031215610c1457600080fd5b843567ffffffffffffffff80821115610c2c57600080fd5b610c3888838901610bb2565b90965094506020870135915080821115610c5157600080fd5b50610c5e87828801610bb2565b95989497509550505050565b600060208284031215610c7c57600080fd5b610c8582610b30565b9392505050565b60008060408385031215610c9f57600080fd5b610ca883610b30565b9150610cb660208401610b30565b90509250929050565b600181811c90821680610cd357607f821691505b602082108103610cf357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561030857610308610cf9565b8181038181111561030857610308610cf9565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220653bbf068fbf38ea2d903b1ebb18b5e15b6ee315953935aca86f6e6baa01b99e64736f6c63430008180033";

type LarryMemeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LarryMemeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LarryMeme__factory extends ContractFactory {
  constructor(...args: LarryMemeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LarryMeme & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LarryMeme__factory {
    return super.connect(runner) as LarryMeme__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LarryMemeInterface {
    return new Interface(_abi) as LarryMemeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LarryMeme {
    return new Contract(address, _abi, runner) as unknown as LarryMeme;
  }
}
